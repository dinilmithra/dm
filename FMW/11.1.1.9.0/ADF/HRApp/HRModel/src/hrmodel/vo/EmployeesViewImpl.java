package hrmodel.vo;

import java.sql.ResultSet;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.QueryCollection;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 31 21:47:53 EDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmployeesViewImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public EmployeesViewImpl() {
    }

    @Override
    protected ViewRowImpl createRowFromResultSet(Object object,
                                                 ResultSet resultSet) {
        return super.createRowFromResultSet(object, resultSet);
    }

    @Override
    protected void executeQueryForCollection(Object object, Object[] object2,
                                             int i) {
        super.executeQueryForCollection(object, object2, i);
    }

    @Override
    protected Object getUserDataForCollection(Object object) {
        return super.getUserDataForCollection(object);
    }

    @Override
    protected void releaseUserDataForCollection(Object object,
                                                Object object2) {
        super.releaseUserDataForCollection(object, object2);
    }

    @Override
    protected void setUserDataForCollection(Object object, Object object2) {
        super.setUserDataForCollection(object, object2);
    }

    @Override
    protected void create() {
        super.create();
    }

    @Override
    public void executeQuery() {
        super.executeQuery();
    }

    @Override
    protected double getQueryCollectionWeight(QueryCollection queryCollection) {
        return super.getQueryCollectionWeight(queryCollection);
    }

    @Override
    public RowSet[] getRowSets() {
        return super.getRowSets();
    }

    @Override
    public void postChanges(TransactionEvent transactionEvent) {
        super.postChanges(transactionEvent);
    }

    @Override
    public void prepareRowSetForQuery(ViewRowSetImpl viewRowSetImpl,
                                      Row[] row) {
        super.prepareRowSetForQuery(viewRowSetImpl, row);
    }

    @Override
    public void prepareRowSetForQuery(ViewRowSetImpl viewRowSetImpl) {
        super.prepareRowSetForQuery(viewRowSetImpl);
    }
}
