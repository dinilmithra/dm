package com.dm.pgmapp.pgmmodel.views;

import oracle.jbo.Row;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ProgrammaticViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 25 22:20:55 EST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmployeesViewRowImpl extends ProgrammaticViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DepartmentId,
        FirstName,
        Id,
        LastName,
        ParentDeptId,
        NewTester,
        DepartmentsView;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int PARENTDEPTID = AttributesEnum.ParentDeptId.index();
    public static final int NEWTESTER = AttributesEnum.NewTester.index();
    public static final int DEPARTMENTSVIEW = AttributesEnum.DepartmentsView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EmployeesViewRowImpl() {
    }

    /**
     * Gets Employee entity object.
     * @return the Employee
     */
    public EntityImpl getEmployee() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for DEPARTMENT_ID using the alias name DepartmentId.
     * @return the DEPARTMENT_ID
     */
    public Integer getDepartmentId() {
        return (Integer) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTMENT_ID using the alias name DepartmentId.
     * @param value value to set the DEPARTMENT_ID
     */
    public void setDepartmentId(Integer value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for FIRST_NAME using the alias name FirstName.
     * @return the FIRST_NAME
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName.
     * @param value value to set the FIRST_NAME
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for LAST_NAME using the alias name LastName.
     * @return the LAST_NAME
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName.
     * @param value value to set the LAST_NAME
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ParentDeptId.
     * @return the ParentDeptId
     */
    public String getParentDeptId() {
        return (String) getAttributeInternal(PARENTDEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ParentDeptId.
     * @param value value to set the  ParentDeptId
     */
    public void setParentDeptId(String value) {
        setAttributeInternal(PARENTDEPTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NewTester.
     * @return the NewTester
     */
    public String getNewTester() {
        return (String) getAttributeInternal(NEWTESTER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NewTester.
     * @param value value to set the  NewTester
     */
    public void setNewTester(String value) {
        setAttributeInternal(NEWTESTER, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link DepartmentsView.
     */
    public Row getDepartmentsView() {
        return (Row)getAttributeInternal(DEPARTMENTSVIEW);
    }

    /**
     * Sets the master-detail link DepartmentsView between this object and <code>value</code>.
     */
    public void setDepartmentsView(Row value) {
        setAttributeInternal(DEPARTMENTSVIEW, value);
    }
}
