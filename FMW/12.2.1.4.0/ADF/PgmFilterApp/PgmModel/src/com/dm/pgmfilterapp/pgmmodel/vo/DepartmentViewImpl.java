package com.dm.pgmfilterapp.pgmmodel.vo;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;

import oracle.jbo.Key;
import oracle.jbo.RangePagingDataFilter;
import oracle.jbo.ScrollableDataFilter;
import oracle.jbo.server.ProgrammaticViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 14 22:12:44 EDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DepartmentViewImpl extends ProgrammaticViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public DepartmentViewImpl() {
    }

    private List<Object> populateData() {

        List<Object> rows = new ArrayList<Object>();

        HashMap<String, Object> row1 = new HashMap<String, Object>();
        row1.put("Id", 1);
        row1.put("Name", "Hr");
        rows.add(row1);

        HashMap<String, Object> row2 = new HashMap<String, Object>();
        row2.put("Id", 2);
        row2.put("Name", "Sales");
        rows.add(row2);

        HashMap<String, Object> row3 = new HashMap<String, Object>();
        row3.put("Id", 3);
        row3.put("Name", "Marketing");
        rows.add(row3);
        return rows;

    }

    /**
     * getRangePagingData - for custom java data source support.
     */
    public Collection<Object> getRangePagingData(RangePagingDataFilter filter) {
        Collection<Object> value = super.getRangePagingData(filter);
        return value;
    }

    /**
     * retrieveDataByKey - for custom java data source support.
     */
    public Collection<Object> retrieveDataByKey(Key key, int size) {
        Collection<Object> value = super.retrieveDataByKey(key, size);
        return value;
    }

    /**
     * getScrollableData - for custom java data source support.
     */
    public Collection<Object> getScrollableData(ScrollableDataFilter filter) {
        //        Collection<Object> value = super.getScrollableData(filter);
        ArrayList<Object> value = (ArrayList<Object>) populateData();
        return value;
    }
}

